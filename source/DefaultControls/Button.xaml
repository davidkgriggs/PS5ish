<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
		<Setter Property="Height" Value="60" />
		<Setter Property="Margin" Value="15,6" />	
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">						
						<Border CornerRadius="30" Opacity="0.4" Background="{DynamicResource ControlBackgroundBrush}"
                                x:Name="MainBackground"/>
						<Border x:Name="MainBorder" Margin="-6" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{DynamicResource AnimatedBorderBrush}" Tag="False"
                                BorderThickness="3" CornerRadius="35" Visibility="Collapsed" />
						<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
                                   Foreground="{TemplateBinding Foreground}" FontWeight="SemiBold"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="25,0">                            
                                <ContentPresenter />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
						   <Setter Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
							<Setter Property="Opacity" Value="1" TargetName="MainBackground" />
							<Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}" TargetName="MainBackground" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SelectionLightBrush}" TargetName="MainBackground" />
                        </Trigger> 
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ButtonEx" BasedOn="{StaticResource {x:Type Button}}">
    </Style>
	
    <Style x:Key="GameOptionsButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
		<Setter Property="Height" Value="60" />
		<Setter Property="Width" Value="60" />
		<Setter Property="Margin" Value="15,6" />	
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">						
						<Border CornerRadius="65" Opacity="0.4" Background="{DynamicResource ControlBackgroundBrush}"
                                x:Name="MainBackground"/>
						<Border x:Name="MainBorder" Margin="-6" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{DynamicResource AnimatedBorderBrush}" Tag="False"
                                BorderThickness="3" CornerRadius="60" Visibility="Collapsed" />
						<TextBlock Style="{DynamicResource TextBlockBaseStyle}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="0">                            
                                <ContentPresenter />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
						   <Setter Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
							<Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
							<Setter Property="Opacity" Value="1" TargetName="MainBackground" />
							<Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}" TargetName="MainBackground" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource SelectionLightBrush}" TargetName="MainBackground" />
                        </Trigger> 
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--###############################################################################################-->
    <!--###############################################################################################-->
    <!--###############################################################################################-->
    <!--###############################################################################################-->
    <Style x:Key="SelectedRowGameHighlighter" TargetType="Button">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Height" Value="178"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="0" To="1" Duration="0:0:0.2" FillBehavior="Stop"/>
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="0" To="1" Duration="0:0:0.2" FillBehavior="Stop"/>
                        </Storyboard>
                        <Storyboard x:Key="OpacityAnim">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0" Duration="0:0:0.3" FillBehavior="Stop"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="1,0" Opacity="1">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <Border x:Name="MainBorder" Opacity="1" BorderThickness="3" CornerRadius="28" Width="178" Height="{TemplateBinding Height}" Style="{DynamicResource AnimatedCoverBrush}" Visibility="Visible" Tag="False">
                        </Border>

                        <Border x:Name="FlashBorder" CornerRadius="28" Opacity="1" Width="178" Height="{TemplateBinding Height}" Style="{DynamicResource AnimatedFlashCover}"  Visibility="Visible" Tag="False">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="0">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="1">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="2">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="3">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="4">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="5">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="6">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="7">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="8">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=MoreGames, Path=IsFocused}" Value="True">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Tag" Value="True" TargetName="FlashBorder" />
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OpacityAnim}"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Settings GridItemHeightRatio}" Value="1">
                <Setter Property="Height" Value="178" />
            </DataTrigger>
            <DataTrigger Binding="{Settings GridItemHeightRatio}" Value="4">
                <Setter Property="Height" Value="239" />
            </DataTrigger>
            <DataTrigger Binding="{Settings GridItemHeightRatio}" Value="3">
                <Setter Property="Height" Value="261" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MoreGamesStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Black" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Width" Value="105"/>
        <Setter Property="MaxWidth" Value="105"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="1.6" Duration="0:0:0.15"/>
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="1.6" Duration="0:0:0.15"/>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="1.6" To="1" Duration="0:0:0.15"/>
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="1.6" To="1" Duration="0:0:0.15"/>
                        </Storyboard>

                        <Storyboard x:Key="Intro">
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="0" To="1" BeginTime="0:0:1.4" Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="0" To="1" BeginTime="0:0:1.4" Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:1.4" Duration="0:0:0.1" From="0" To="1"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0,0">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <Grid HorizontalAlignment="Left">
                            <Border Background="#80100100" CornerRadius="20"/>
                            <StackPanel Tag="{DynamicResource MoreGamesTrueFalse}" Style="{DynamicResource MoreGamesIcon}">
                                <Image x:Name="MoreGamesPNG" RenderOptions.BitmapScalingMode="Fant" Width="{TemplateBinding Width}" Source="{ThemeFile 'Images/MoreGames.png'}"  >
                                    <Image.CacheMode>
                                        <BitmapCache EnableClearType="True" 
                                                     RenderAtScale="1" 
                                                     SnapsToDevicePixels="True"/>
                                    </Image.CacheMode>
                                </Image>
                            </StackPanel>
                            <Image x:Name="BackToRowPNG" Opacity="0" RenderOptions.BitmapScalingMode="Fant" Width="105" Source="{ThemeFile 'Images/BackToRow.png'}"  >
                                <Image.CacheMode>
                                    <BitmapCache EnableClearType="True" 
                                                 RenderAtScale="1" 
                                                 SnapsToDevicePixels="True"/>
                                </Image.CacheMode>
                            </Image>
                            <Border Name="MainBorder" BorderThickness="1.5" Style="{DynamicResource AnimatedCoverBrush}" Height="{TemplateBinding MaxWidth}" Width="{TemplateBinding MaxWidth}"
                                                                    Margin="-5,-5,-5,-5" Visibility="Collapsed" CornerRadius="18" Tag="False"/>
                        </Grid>
                        <TextBlock x:Name="Text" Visibility="Collapsed" Opacity="1" Margin="120,30,0,0" Text="{DynamicResource LOCAllGames}" Style="{DynamicResource TextBlockBaseStyle}" FontSize="30"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=AnimatedIntro, Path=Visibility}" Value="Hidden"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Intro}"/>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=IntroVideoSource, Path=MaxHeight}" Value="2161"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Intro}"/>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=XMB,Path=RenderTransform.(ScaleTransform.ScaleX)}" Value="1"/>
                                <Condition Binding="{Binding ElementName=MoreGames, Path=IsChecked}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=XMB,Path=RenderTransform.(ScaleTransform.ScaleX)}" Value="1.5"/>
                                <Condition Binding="{Binding ElementName=MoreGames, Path=IsChecked}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.65" ScaleY="0.65"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="-5,0,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=XMB,Path=RenderTransform.(ScaleTransform.ScaleX)}" Value="1.8"/>
                                <Condition Binding="{Binding ElementName=MoreGames, Path=IsChecked}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="-25,0,0,0"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding ElementName=SelectedIndexLogic, Path=Height}" Value="0">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=SuccessStoryButton, Path=IsFocused}" Value="True">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=MoreGames, Path=IsChecked}" Value="True">
                            <Setter Property="Opacity" Value="0" TargetName="MoreGamesPNG"/>
                            <Setter Property="Opacity" Value="1" TargetName="BackToRowPNG"/>
                            <Setter Property="Opacity" Value="0" TargetName="Text" />
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MoreGames, Path=IsChecked}" Value="False"/>
                                <Condition Binding="{Binding ElementName=MoreGames, Path=IsFocused}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusedOff}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        
                        <Trigger Property="IsFocused" Value="True">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Text" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="MainBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="Text" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonPlayOptions" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Setter Property="Margin" Value="10,10,10,10" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent" Margin="0,10,0,10" VerticalAlignment="Top">
                        <Border Background="{TemplateBinding Background}" Height="70" BorderThickness="0" CornerRadius="35" BorderBrush="#5A5A5A" Margin="0" x:Name="MainBorder"/>
                        <TextBlock Style="{DynamicResource TextBlockBaseStyle}" Foreground="{TemplateBinding Foreground}" FontFamily="Calibri" FontWeight="Bold" FontSize="26" HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Padding="20,0,20,0">
                                                                        <ContentPresenter />
                        </TextBlock>
                        <Border x:Name="BorderFocus" Margin="-4" CornerRadius="37" BorderThickness="3" Style="{DynamicResource AnimatedCoverBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Background" Value="#40808080" TargetName="MainBorder"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}"/>
                            <Setter Property="Background" Value="#F2F2F2" TargetName="MainBorder"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />							
							<Setter Property="Tag" Value="True" TargetName="MainBorder" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}"/>
                            <Setter Property="Background" Value="#F2F2F2" TargetName="MainBorder"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemFilters, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ElemFiltersAdditional, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_ContentFilterItems, Path=Visibility}" Value="Visible">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ZoomButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="#40808080" CornerRadius="75"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" Margin="-5" CornerRadius="80" Visibility="Hidden" Style="{DynamicResource AnimatedCoverBrush}" Tag="False"/>
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE740;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE73F;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=TrailerContainer1, Path=IsKeyboardFocusWithin}" Value="False">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MuteButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="{SettingsBinding Fullscreen.IsMusicMuted, Mode=TwoWay}"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="#40808080" CornerRadius="75"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" Margin="-5" CornerRadius="80" Visibility="Hidden" Style="{DynamicResource AnimatedCoverBrush}" Tag="False"/>
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE767;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE74F;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StopPlayButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="True"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="#40808080" CornerRadius="75"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" Margin="-5" CornerRadius="80" Visibility="Hidden" Style="{DynamicResource AnimatedCoverBrush}" Tag="False" />
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE71A;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE768;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=TrailerContainer1, Path=IsKeyboardFocusWithin}" Value="True">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameStatus, Path=Visibility}" Value="Visible">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayPauseButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource SelectionLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="IsChecked" Value="True"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <Border x:Name="Background" Background="#40808080" CornerRadius="75"/>
                        <Border x:Name="BorderFocus" BorderThickness="3" Margin="-5" CornerRadius="80" Visibility="Hidden" Style="{DynamicResource AnimatedCoverBrush}" Tag="False" />
                        <StackPanel x:Name="ON" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE769;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel x:Name="OFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE768;" FontFamily="Segoe MDL2 Assets" FontSize="48" Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                            <Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Background" Value="#F2F2F2" TargetName="Background" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                            <Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="OFF" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="ON" Value="Collapsed"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding ElementName=TrailerContainer1, Path=IsKeyboardFocusWithin}" Value="True">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameDetails, Path=Visibility}" Value="Collapsed">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ElemGameStatus, Path=Visibility}" Value="Visible">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFilterMenu" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}" >
                        <TextBlock Style="{DynamicResource TextBlockBaseStyle}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="0">                            
                                <ContentPresenter />
                        </TextBlock>

                        <Border Background="{DynamicResource Background}"
							BorderThickness="0" CornerRadius="500"
                            BorderBrush="#5A5A5A"
                            Margin="0,0,0,0"    
                            HorizontalAlignment="Center" VerticalAlignment="Center" Width="75" Height="75"   
                            x:Name="MainBorder"/>

                        <Border x:Name="BorderFocus" Visibility="Collapsed"
                                BorderThickness="3" CornerRadius="500"
                                Style="{DynamicResource AnimatedCoverBrush}"
                                Margin="0,0,0,0"    
                                HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Height="80" Tag="False"/>

                        <ContentPresenter />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=DKGThemeModifier_PS5ish_StoreButton, Path=IsKeyboardFocusWithin}" Value="True">
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>

                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Background" Value="White" TargetName="MainBorder"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Background" Value="White" TargetName="MainBorder"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
							<Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuccessStory" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Width" Value="375"/>
        <Setter Property="MinHeight" Value="150"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent" Width="365">
                        <Border x:Name="BorderFocus" BorderThickness="3" Margin="-5" CornerRadius="5" Visibility="Hidden" Style="{DynamicResource AnimatedCoverBrush}" Tag="False" />

                        <StackPanel Orientation="Horizontal" Width="365" Tag="{DynamicResource RightInfoTrueFalse}" Style="{DynamicResource RightInfo}">
                            <StackPanel.Background>
                                <ImageBrush ImageSource="../Images/Trophies.png" RenderOptions.BitmapScalingMode="Fant" Opacity="0.75"/>
                            </StackPanel.Background>
                            <StackPanel.CacheMode>
                                <BitmapCache EnableClearType="True" 
                                             RenderAtScale="1" 
                                             SnapsToDevicePixels="True"/>
                            </StackPanel.CacheMode>
                            <StackPanel>
                                <Grid Margin="0,10,0,15">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="165"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" Margin="20,0,0,0">
                                        <TextBlock Style="{DynamicResource ProgressLabel}"/>

                                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" >
                                            <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="24" FontFamily="Segoe UI Semibold"
                                                Text="{PluginSettings Plugin=SuccessStory, Path=Percent}" />

                                            <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="24" FontFamily="Segoe UI Semibold"
                                                Text="%" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Grid.Column="1" HorizontalAlignment="Left">
                                        <TextBlock Style="{DynamicResource EarnedLabel}"/>

                                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" >
                                            <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="24" FontFamily="Segoe UI Semibold"
                                                Text="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" />

                                            <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="24" FontFamily="Segoe UI Semibold"
                                                Text="/" />

                                            <TextBlock Style="{DynamicResource TextBlockBaseStyle}" FontSize="24" FontFamily="Segoe UI Semibold"
                                                Text="{PluginSettings Plugin=SuccessStory, Path=Total}" />
                                        </StackPanel>
                                    </StackPanel>

                                </Grid>

                                <Grid Margin="0,0,0,22.5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="60"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" RenderOptions.BitmapScalingMode="Fant" Width="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,0"
                                                       Source="{ThemeFile 'Images/Trophy_Gold.png'}" >
                                        <Image.CacheMode>
                                            <BitmapCache EnableClearType="True" 
                                                         RenderAtScale="1" 
                                                         SnapsToDevicePixels="True"/>
                                        </Image.CacheMode>
                                    </Image>
                                    <TextBlock Grid.Column="1" Text="0" Style="{DynamicResource TextBlockBaseStyle}" FontSize="28" VerticalAlignment="Bottom" Margin="0,0,0,-5"/>

                                    <Image Grid.Column="2" RenderOptions.BitmapScalingMode="Fant" Width="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,0"
                                                       Source="{ThemeFile 'Images/Trophy_Silver.png'}" >
                                        <Image.CacheMode>
                                            <BitmapCache EnableClearType="True" 
                                                         RenderAtScale="1" 
                                                         SnapsToDevicePixels="True"/>
                                        </Image.CacheMode>
                                    </Image>
                                    <TextBlock Grid.Column="3" Text="0" Style="{DynamicResource TextBlockBaseStyle}" FontSize="28" VerticalAlignment="Bottom" Margin="0,0,0,-5"/>

                                    <Image Grid.Column="4" RenderOptions.BitmapScalingMode="Fant" Width="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,0"
                                                       Source="{ThemeFile 'Images/Trophy_Bronze.png'}" >
                                        <Image.CacheMode>
                                            <BitmapCache EnableClearType="True" 
                                                         RenderAtScale="1" 
                                                         SnapsToDevicePixels="True"/>
                                        </Image.CacheMode>
                                    </Image>
                                    <TextBlock Grid.Column="5" Text="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" Style="{DynamicResource TextBlockBaseStyle}" FontSize="28" VerticalAlignment="Bottom" Margin="0,0,0,-5"/>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                            <Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderFocus" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                            <Setter Property="Tag" Value="True" TargetName="BorderFocus" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrushDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>